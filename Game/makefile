# A makefile that can be used more conveniently to create larger projects in CE22 Grundlagen der Programmierung

# This is the name of the source file that contains the main() function
MAINSRC = gameoflife.c

# This is a list of names of the source files that each represent a driver of a test suite. Each of them contains
# an individual main() function conduction the test for the corresponding unit.
TESTSRCS = cmdargs_test.c core_test.c

# This is a list of all the other source files
OTHERSRCS = game_state.c pixel_font.c core.c cmdargs.c

# Specifiy optimization options like -O3
OPTIMIZE =

# Specify additional compile flags
CFLAGS = -fanalyzer $(shell pkg-config --cflags sdl2 SDL2_ttf)

# Specify additional linker flags
LDFLAGS =

# Specify additional linker libs if needed (e.g., -lm)
LDLIBS = $(shell pkg-config --libs sdl2 SDL2_ttf SDL2_mixer)

####################################################################
# In theory, you don't need to change that much in the following
# section and after the next one, except for fixing bugs or adding
# new features

TARGETRELEASEDIR = build/release
TESTCOVERDIR     = build/coverage
TESTASANDIR      = build/asan

OTHEROBJS = $(OTHERSRCS:.c=.o)

TARGETRELEASEOBJS = $(addprefix $(TARGETRELEASEDIR)/,$(MAINSRC:.c=.o) $(OTHEROBJS))
TARGETRELEASEDEPS = $(TARGETRELEASEOBJS:.o=.d)

TESTCOVEROBJS      = $(addprefix $(TESTCOVERDIR)/,$(TESTSRCS:.c=.o))
TESTCOVEROTHEROBJS = $(addprefix $(TESTCOVERDIR)/,$(OTHEROBJS))
TESTCOVERDEPS      = $(TESTCOVEROBJS:.o=.d) $(TESTCOVEROTHEROBJS:.o=.d)

TESTASANOBJS      = $(addprefix $(TESTASANDIR)/,$(TESTSRCS:.c=.o))
TESTASANOTHEROBJS = $(addprefix $(TESTASANDIR)/,$(OTHEROBJS))
TESTASANDEPS      = $(TESTASANOBJS:.o=.d) $(TESTASANOTHEROBJS:.o=.d)

TARGET            = $(addprefix $(TARGETRELEASEDIR)/,$(MAINSRC:.c=))
TESTCOVERTARGETS  = $(addprefix $(TESTCOVERDIR)/,$(TESTSRCS:.c=))
TESTASANTARGETS   = $(addprefix $(TESTASANDIR)/,$(TESTSRCS:.c=))

HAS_SDL_MIXER := $(shell dpkg -l | grep -q libsdl2-mixer && echo "yes")
###########################################################################
# Adapt this section as needed

.PHONY: all
all: $(TARGET) $(TESTCOVERTARGETS) $(TESTASANTARGETS)
#./build/release/$(MAINSRC:.c=)

.PHONY: clean
clean:
	rm -Rf build html latex

.PHONY: test
test: $(TESTASANTARGETS)
# This is a tricky one, we have to call each test target individually
# We construct this by using a foreach statement
	$(foreach T, $(TESTASANTARGETS), $(T) && ) true

# Target to generate the pixel_font_data.c file from the binary font file
# so we can directly embed it into out application. This must be manually
# invoked.
.PHONY: gen-pixel-font
gen-pixel-font:
	echo "/** AUTOGENERATED. PLEASED DO NOT EDIT! */" >pixel_font_data.c
	xxd -i -n pixel_font -i resources/Grand9K\ Pixel.ttf >>pixel_font_data.c
.PHONY: coverage
coverage: $(TESTCOVERTARGETS)
	$(foreach T, $(TESTCOVERTARGETS), $(T) && ) true 
	gcov $(TESTCOVEROBJS)
	mv *.gcov $(TESTCOVERDIR)

.PHONY: coverage-report
coverage-report:
	gcovr -r . --html --html-details -o  $(TESTCOVERDIR)/coverage.html
	firefox $(TESTCOVERDIR)/coverage.html

.PHONY: doxygen

	doxygen: Doxyfile
	doxygen Doxyfile
	cd latex
	make -C latex
	mv latex/refman.pdf $(MAINSRC:.c=)

Doxyfile:
	doxygen -g
###########################################################################
# This section most likely doesn't need to change

COMMONFLAGS=-Wall -Werror -MMD -MP $(CFLAGS) $(OPTIMIZE)

$(TARGETRELEASEDIR):
	mkdir -p $@

$(TARGETRELEASEOBJS): | $(TARGETRELEASEDIR)

$(TARGETRELEASEDIR)/%.o: %.c
	gcc -c $(COMMONFLAGS) $< -o $@

$(TARGET): $(TARGETRELEASEOBJS)
ifeq ($(HAS_SDL_MIXER),yes)
	gcc $^ $(LDFLAGS) $(LDLIBS) -o $@
	@echo "Das Programm wurde erfolgreich kompiliert.\nnice!"
else
	@echo "Fehler: SDL2-Mixer ist nicht installiert. Bitte installiere SDL2-Mixer mit \n"sudo apt install libsdl2-mixer-2.0-0 libsdl2-mixer-dev", \num das Programm zu kompilieren."
endif

-include $(TARGETRELEASEDEPS)

###########################################################################

$(TESTCOVERDIR):
	mkdir -p $@

$(TESTCOVEROBJS) $(TESTCOVEROTHEROBJS): | $(TESTCOVERDIR)

$(TESTCOVERDIR)/%.o: %.c
	gcc -c --coverage $(COMMONFLAGS) $< -o $@

$(TESTCOVERDIR)/%: $(TESTCOVERDIR)/%.o $(TESTCOVEROTHEROBJS)
	gcc $^ $(LDFLAGS) --coverage $(LDLIBS) -o $@

-include $(TESTCOVERDEPS)

###########################################################################

$(TESTASANDIR):
	mkdir -p $@

$(TESTASANOBJS) $(TESTASANOTHEROBJS): | $(TESTASANDIR)

$(TESTASANDIR)/%.o: %.c
	gcc -c -g -fsanitize=address $(COMMONFLAGS) $< -o $@

$(TESTASANDIR)/%: $(TESTASANDIR)/%.o $(TESTASANOTHEROBJS)
	gcc $^ $(LDFLAGS) -g -fsanitize=address $(LDLIBS) -o $@

-include $(TESTASANDEPS)

###########################################################################

